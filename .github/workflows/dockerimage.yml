name: Docker Image CI

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Set env
      run: echo "::set-env name=ACTION_STATE::yellow"

    - name: debug action_state
      run: printenv | grep ACTION_STATE

    - name: overwrite ACTION_STATE
      uses: allenevans/set-env@v1.0.0
      with:
        ACTION_STATE: 'red'

    - name: debug action_state
      run: printenv | grep ACTION_STATE

    - name: propsfile
      run: |
        echo TEST_VAR1=123 > propsfile;
        echo TEST_VAR2=abc >> propsfile;
        export $(cat propsfile | xargs);
        printenv | grep TEST_VAR

    - name: Printenv
      run: |
        echo "MY_ENV_VAR=${MY_ENV_VAR}"
        printenv

    - name: github api
      uses: allenevans/github-api@dist/artifacts-1
      id: branch
      with:
        token: ${{secrets.GH_ACTION_TOKEN}}
        command: Repository.getBranch
        repo: allenevans/set-env
        args: master

    - name: Branch info
      run: |
        echo "${{steps.branch.outputs.result}}"
        echo "branch: ${{steps.branch.outputs.name}}"
        echo "sha: ${{steps.branch.outputs.commit.sha}}"
        echo ".."

    - name: get gist
      uses: allenevans/github-api@dist/artifacts-1
      id: get_gist
      with:
        token: ${{secrets.GH_ACTION_TOKEN}}
        command: Gist.read
        id: 6b48964ef7b09214a0953bc3e0d30891

    - name: delete gist
      uses: allenevans/github-api@dist/artifacts-1
      id: delete_gist
      with:
        token: ${{secrets.GH_ACTION_TOKEN}}
        command: Gist.delete
        id: 6b48964ef7b09214a0953bc3e0d30891

    - name: create gist
      uses: allenevans/github-api@dist/artifacts-1
      id: create_gist
      with:
        token: ${{secrets.GH_ACTION_TOKEN}}
        command: Gist.create
        args: |
          - description: Hello World Examples
            public: false
            files:
              hello_world.js:
                content: config.log('hello world')
        select: ".data"

    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"

    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"

    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"

    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"

    - name: Set environment variables
      run: |
        echo "TAG=spike-action:$(date +%s)" > props

    - name: Build the Docker image
      run: |
        export $(cat props | xargs)
        printenv
        docker build . --file Dockerfile --tag $TAG

    - name: Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    - name: Test
      run: |
        export $(cat props | xargs)
        printenv
        docker run $TAG
